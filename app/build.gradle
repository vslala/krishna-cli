plugins {
    // Add Spring Boot and dependency management plugins.
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.0'

    // Existing application plugin.
    id 'application'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation platform('software.amazon.awssdk:bom:2.21.1')
    implementation 'software.amazon.awssdk:s3'
    implementation 'software.amazon.awssdk:bedrock'
    implementation 'software.amazon.awssdk:bedrockruntime'
    implementation 'software.amazon.awssdk:sts'
    implementation 'org.json:json:20231013'
    implementation("org.slf4j:slf4j-api:2.0.12")
    implementation 'info.picocli:picocli:4.7.6'
    implementation 'info.picocli:picocli-spring-boot-starter:4.7.6'
    implementation 'org.xerial:sqlite-jdbc:3.45.0.0'
    implementation 'org.flywaydb:flyway-core:9.22.1'
    implementation 'org.springframework:spring-jdbc:6.0.11'
    implementation 'org.springframework:spring-context:6.1.14'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework:spring-orm:7.0.0-M1'
    implementation 'org.springframework.statemachine:spring-statemachine-core:4.0.0'
    implementation 'com.microsoft.playwright:playwright:1.51.0'
    implementation 'org.hibernate.orm:hibernate-community-dialects:6.6.5.Final'
    implementation("com.google.apis:google-api-services-gmail:v1-rev110-1.25.0")



//    implementation 'org.mapstruct:mapstruct:1.6.3'

    implementation 'org.springframework.boot:spring-boot-starter'

    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'

    compileOnly 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'

    annotationProcessor 'info.picocli:picocli-codegen:4.7.6'

    testCompileOnly 'org.projectlombok:lombok:1.18.32'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.32'
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.2'
    testImplementation 'org.mockito:mockito-core:5.15.2'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.15.2'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation("org.junit-pioneer:junit-pioneer:2.3.0")
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:33.1.0-jre'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

jar {
    archiveBaseName = "krishna"
    manifest {
        attributes(
                'Main-Class': 'org.main.App'
        )
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

application {
    // Define the main class for the application.
    mainClass = 'org.main.App'
}

compileJava {
    options.compilerArgs += ["-Aproject=${project.group}/${project.name}"]
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

// Configure bootRun to disable the web environment (CLI-only application).
bootRun {
    systemProperty "spring.main.web-application-type", "none"
}
